import os

from DataAcquisition.SensorId import SensorId

print(os.getcwd())
if os.getcwd()[-10:] == "daata_v1_0":
    os.chdir(os.path.join(os.getcwd(), r"..\..\Libraries\Sensor"))
elif os.getcwd()[-6:] == "Sensor":
    pass
else:
    print("Directory not correct")
    print(os.getcwd())
    exit(1)


file_beginning = """
/*******************************************************************************************
This is an auto generated file. DO NOT edit this file. To make changes to the SensorId list, 
go to Application>DataAcquisition>SensorId.py and edit the dictionary there. Then regenerate
this file by using Application>GenerateSensorIdHFile.py (It will automatically place the
file in the correct location i.e. Libraries>Sensor>SensorId.h)

*******************************************************************************************/

#ifndef SENSORID_H
#define SENSORID_H

#include <Arduino.h>

enum sensor_id_t : uint16_t
{
"""
file_end = """

    MAX_SENSOR_NUM = 65535
};

#endif
"""
default_sensor = """
    /**
     * 000 - DEFAULTS, FLAGS, COMMANDS, MISC
     */
"""
time_sensor = """
    /**
     * 100 - TIME "SENSORS"
     */
"""
speed_sensor = """
    /**
     * 200 - SPEED/POSITION SENSORS
     */
"""
force_pressure_sensor = """
    /**
     * 300 - FORCE/PRESSURE SENSORS
     */
"""
lds_sensor = """
    /**
     * 400 - LDS SENSORS
     */
"""
imu_sensor = """
    /**
     * 500 - IMU SENSORS
     */
"""

# Get the length of the longest string name for nice formatting :)
longest_name = 0
for sensor_id in SensorId.keys():
    if len(SensorId[sensor_id]["name"]) > longest_name:
        longest_name = len(SensorId[sensor_id]["name"])

# Add everything to file
with open("SensorId.h", "w") as file:
    file.write(file_beginning)

    # Write all the default sensors
    file.write(default_sensor)
    for sensor_id in SensorId.keys():
        if sensor_id < 100:
            spaces_to_add = 1 + longest_name - len(SensorId[sensor_id]["name"])
            file.write("\t" + SensorId[sensor_id]["name"].upper() + spaces_to_add*" " +"= ")
            file.write(str(sensor_id) + ",\t//NumBytes: " + str(SensorId[sensor_id]["num_bytes"]))
            if "h_file_comment" in SensorId[sensor_id].keys():
                file.write(" - " + SensorId[sensor_id]["h_file_comment"])
            file.write("\n")

    file.write(time_sensor)
    for sensor_id in SensorId.keys():
        if 100 <= sensor_id < 200:
            spaces_to_add = 1 + longest_name - len(SensorId[sensor_id]["name"])
            file.write("\t" + SensorId[sensor_id]["name"].upper() + spaces_to_add*" " +"= ")
            file.write(str(sensor_id) + ",\t//NumBytes: " + str(SensorId[sensor_id]["num_bytes"]))
            if "h_file_comment" in SensorId[sensor_id].keys():
                file.write(" - " + SensorId[sensor_id]["h_file_comment"])
            file.write("\n")

    file.write(speed_sensor)
    for sensor_id in SensorId.keys():
        if 200 <= sensor_id < 300:
            spaces_to_add = 1 + longest_name - len(SensorId[sensor_id]["name"])
            file.write("\t" + SensorId[sensor_id]["name"].upper() + spaces_to_add * " " + "= ")
            file.write(str(sensor_id) + ",\t//NumBytes: " + str(SensorId[sensor_id]["num_bytes"]))
            if "h_file_comment" in SensorId[sensor_id].keys():
                file.write(" - " + SensorId[sensor_id]["h_file_comment"])
            file.write("\n")

    file.write(force_pressure_sensor)
    for sensor_id in SensorId.keys():
        if 300 <= sensor_id < 400:
            spaces_to_add = 1 + longest_name - len(SensorId[sensor_id]["name"])
            file.write("\t" + SensorId[sensor_id]["name"].upper() + spaces_to_add * " " + "= ")
            file.write(str(sensor_id) + ",\t//NumBytes: " + str(SensorId[sensor_id]["num_bytes"]))
            if "h_file_comment" in SensorId[sensor_id].keys():
                file.write(" - " + SensorId[sensor_id]["h_file_comment"])
            file.write("\n")

    file.write(lds_sensor)
    for sensor_id in SensorId.keys():
        if 400 <= sensor_id < 500:
            spaces_to_add = 1 + longest_name - len(SensorId[sensor_id]["name"])
            file.write("\t" + SensorId[sensor_id]["name"].upper() + spaces_to_add * " " + "= ")
            file.write(str(sensor_id) + ",\t//NumBytes: " + str(SensorId[sensor_id]["num_bytes"]))
            if "h_file_comment" in SensorId[sensor_id].keys():
                file.write(" - " + SensorId[sensor_id]["h_file_comment"])
            file.write("\n")

    file.write(imu_sensor)
    for sensor_id in SensorId.keys():
        if 500 <= sensor_id < 600:
            spaces_to_add = 1 + longest_name - len(SensorId[sensor_id]["name"])
            file.write("\t" + SensorId[sensor_id]["name"].upper() + spaces_to_add * " " + "= ")
            file.write(str(sensor_id) + ",\t//NumBytes: " + str(SensorId[sensor_id]["num_bytes"]))
            if "h_file_comment" in SensorId[sensor_id].keys():
                file.write(" - " + SensorId[sensor_id]["h_file_comment"])
            file.write("\n")

    file.write(file_end)
